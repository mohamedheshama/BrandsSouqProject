package com.brands.dao;
// Generated Apr 10, 2020, 4:17:50 PM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Cart generated by hbm2java
 */
@Entity
@Table(name="cart"
    ,catalog="brands"
)
public class Cart  implements java.io.Serializable {


     private CartId id;
     private Products products;
     private Users users;
     private Date buyingDate;

    public Cart() {
    }

	
    public Cart(CartId id, Products products, Users users) {
        this.id = id;
        this.products = products;
        this.users = users;
    }
    public Cart(CartId id, Products products, Users users, Date buyingDate) {
       this.id = id;
       this.products = products;
       this.users = users;
       this.buyingDate = buyingDate;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="userId", column=@Column(name="user_id", nullable=false) ), 
        @AttributeOverride(name="productId", column=@Column(name="product_id", nullable=false) ) } )
    public CartId getId() {
        return this.id;
    }
    
    public void setId(CartId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="product_id", nullable=false, insertable=false, updatable=false)
    public Products getProducts() {
        return this.products;
    }
    
    public void setProducts(Products products) {
        this.products = products;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id", nullable=false, insertable=false, updatable=false)
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="buying_date", length=19)
    public Date getBuyingDate() {
        return this.buyingDate;
    }
    
    public void setBuyingDate(Date buyingDate) {
        this.buyingDate = buyingDate;
    }




}


